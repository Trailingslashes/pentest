#!/bin/python3
# python3 portscan.py <ip>

import sys
import socket
from datetime import datetime as dt

#!/bin/python3
# python3 portscan.py <ip>

import sys
import socket
from datetime import datetime as dt
import concurrent.futures

# Define target
if len(sys.argv) == 2:
  target = socket.gethostbyname(sys.argv[1]) # translate hostname to ipv4
else:
  print('Invalid amount of arguments')
  print('Syntax: python3 portscan.py <ip>')
  sys.exit()

def scan(port):
  try:
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    socket.setdefaulttimeout(1)
    result = s.connect_ex((target, port))
    if result == 0:
        return f"[+] Port {port} is open"
  except Exception as e:
    print(f"An exception occurred: {e}")
  finally:
    s.close()

print("-" * 50)
print(f"Scanning target: {target}")
print(f"Time started: {str(dt.now())} ")
print("-" * 50)

with concurrent.futures.ThreadPoolExecutor(max_workers=100) as executor:
  future_to_port = {executor.submit(scan, port): port for port in range(1, 1025)}
  for future in concurrent.futures.as_completed(future_to_port):
    port = future_to_port[future]
    try:
      data = future.result()
    except Exception as exc:
      print('%r generated an exception: %s' % (port, exc))
    else:
      if data:
        print(data)

print("\nScan complete.")
